---
import { type CollectionEntry, getCollection } from "astro:content";
import PageLayout from "@layouts/PageLayout.astro";
import Container from "@components/Container.astro";
import ArrowCard from "@components/ArrowCard.astro";
import { DOCS } from "@consts";

const data = (await getCollection("guides"))
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
  
type Acc = {
  [year: string]: CollectionEntry<"guides">[];
}

const posts = data.reduce((acc: Acc, post) => {
    const year = post.data.date.getFullYear().toString();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  }, {});

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a)); 
---

<PageLayout title={DOCS.TITLE} description={DOCS.DESCRIPTION}>
  <Container>
    <div class="space-y-12">
      <!-- Header Section -->
      <div class="animate text-center py-8">
        <h1 class="text-4xl md:text-5xl font-bold gradient-text mb-6">
          Documentation
        </h1>
        <p class="text-xl text-slate-600 dark:text-slate-300 max-w-3xl mx-auto leading-relaxed">
          Comprehensive guides and tutorials to help you get the most out of Swiss AI Platform
        </p>
        
        <!-- Stats Card -->
        <div class="animate-delay-1 inline-flex items-center gap-4 card px-8 py-4 mt-8">
          <div class="flex items-center gap-2">
            <svg class="w-5 h-5 text-indigo-600 dark:text-indigo-400" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            <span class="font-medium text-slate-700 dark:text-slate-300">
              {data.length} Guides Available
            </span>
          </div>
        </div>
      </div>

      <!-- Guides by Year -->
      <div class="space-y-12">
        {years.map(year => (
          <section class="animate space-y-8">
            <div class="flex items-center gap-4">
              <div class="w-12 h-12 bg-gradient-to-r from-indigo-600 to-purple-600 rounded-xl flex items-center justify-center">
                <span class="text-white font-bold text-lg">{year.slice(-2)}</span>
              </div>
              <div>
                <h2 class="text-2xl font-bold text-slate-900 dark:text-white">
                  {year}
                </h2>
                <p class="text-slate-600 dark:text-slate-400">
                  {posts[year].length} guide{posts[year].length !== 1 ? 's' : ''} published
                </p>
              </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {posts[year].map((post) => (
                <div class="card p-6 hover:shadow-xl transition-all duration-300">
                  <ArrowCard entry={post}/>
                </div>
              ))}
            </div>
          </section>
        ))}
      </div>

      <!-- Empty State -->
      {data.length === 0 && (
        <div class="animate text-center py-16">
          <div class="w-24 h-24 bg-gradient-to-r from-slate-200 to-slate-300 dark:from-slate-700 dark:to-slate-600 rounded-full flex items-center justify-center mx-auto mb-6">
            <svg class="w-12 h-12 text-slate-500 dark:text-slate-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z" clip-rule="evenodd"/>
            </svg>
          </div>
          <h3 class="text-xl font-semibold text-slate-900 dark:text-white mb-2">No guides available</h3>
          <p class="text-slate-600 dark:text-slate-400">Check back soon for comprehensive documentation and tutorials.</p>
        </div>
      )}
    </div>
  </Container>
</PageLayout>
