---
interface Props {
  name: string;
  role: string;
  avatar: string;
  url?: string;
}

const { name, role, avatar, url } = Astro.props;
---

<div class="group flex flex-col items-center gap-4 p-6 rounded-2xl bg-white dark:bg-gray-800 border border-gray-200/50 dark:border-gray-700/50 hover:border-gray-300 dark:hover:border-gray-600 hover:shadow-xl dark:hover:shadow-gray-900/25 transition-all duration-300 ease-in-out transform hover:scale-105">
  <div class="relative">
    <img 
      src={avatar} 
      alt={`${name}'s avatar`} 
      class="w-20 h-20 rounded-full object-cover border-4 border-gray-100 dark:border-gray-700 group-hover:border-blue-200 dark:group-hover:border-blue-600 transition-colors duration-300 shadow-lg"
    />
    <div class="absolute inset-0 rounded-full bg-gradient-to-br from-blue-400/20 to-purple-600/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
  </div>
  <div class="flex flex-col items-center text-center space-y-1">
    {url ? (
      <a 
        href={url} 
        target="_blank" 
        rel="noopener noreferrer" 
        class="font-semibold text-lg text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-300"
      >
        {name}
      </a>
    ) : (
      <span class="font-semibold text-lg text-gray-900 dark:text-white">{name}</span>
    )}
    <span class="text-sm font-medium text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-3 py-1 rounded-full">{role}</span>
  </div>
</div> 